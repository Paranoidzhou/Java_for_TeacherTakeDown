Shoot射击游戏第一天:
1.创建6个对象类，并创建World类测试

Shoot射击游戏第二天:
1.创建了6个对象类的构造方法，在World类中测试

Shoot射击游戏第三天:
1.设计小敌机数组、大敌机数组、小蜜蜂数组、子弹数组，并测试
2.设计FlyingObject超类，6个对象类继承超类
3.给FlyingObject超类设计了两个构造方法，6个派生类中分别调用



回顾:
1.方法的重载(Overload):
  1)发生在一个类中，方法名相同，参数列表不同
  2)编译器在编译时会根据方法的签名自动绑定调用的方法
2.构造方法:构造函数、构造器、构建器
    给成员变量赋初值，与类同名、没有返回值类型，
	创建对象时被自动调用
	若自己不写，则默认无参的，若自己写了，则不再默认提供
	可以重载
3.this:指代当前对象，哪个对象调用方法它指的就是哪个对象
    this.成员变量名--------------访问成员变量
	this.方法名()----------------调用方法
	this()-----------------------调用构造方法
4.null:空，没有指向任何对象
       对null操作会发生NullPointerException空指针异常
5.引用类型变量之间画等号: 指向同一个对象，影响
  基本类型变量之间画等号: 赋值，不影响




笔记:
1.引用类型数组:
  1)Student[] stus = new Student[3];
    stus[0] = new Student("zhangsan",25,"LF");
	stus[1] = new Student("lisi",26,"JMS");
	stus[2] = new Student("wangwu",27,"SD");
    stus[1].age = 36; //给stus中第2个元素的年龄赋值为36
  2)Student[] stus = new Student[]{
      new Student("zhangsan",25,"LF"),
      new Student("lisi",26,"JMS"),
      new Student("wangwu",27,"SD")
    };
  3)int[][] arr = new int[3][];----------数组的数组
    arr[0] = new int[2];
	arr[1] = new int[3];
	arr[2] = new int[2];
	arr[1][0] = 100; //给arr中第2个元素中的第1个元素赋值为100
  4)int[][] arr = new int[3][4];
    for(int i=0;i<arr.length;i++){
	  for(int j=0;j<arr[i].length;j++){
	    arr[i][j] = 100;
	  }
	}
2.继承:
  1)作用:代码复用
  2)通过extends来实现继承
  3)超类:所有派生类所共有的属性和行为
    派生类:派生类所特有的属性和行为
  4)派生类继承超类后，派生类具有:超类的+派生类的
  5)一个超类可以有多个派生类
    一个派生类只能有一个超类-------单一继承
  6)继承具有传递性
  7)java规定:构造派生类之前必须先构造超类
    在派生类的构造方法中若没有调用超类的构造方法
	----------则默认super()调用超类的无参构造方法
	在派生类的构造方法中若调用了超类的构造方法
	----------则不再默认提供
	super()调用超类构造方法，必须位于派生类构造的第1句
3.super:指代当前对象的超类对象
  super的用法:
    1)super.成员变量名-----------------访问超类的成员变量
	2)super.方法名()-------------------调用超类的方法(明天下午讲)
	3)super()--------------------------调用超类的构造方法




练习:
1.将今天的项目代码重写两次
2.oo.day04包中，要求:
  1)创建Person超类，包含:
    1.1)成员变量:name,age,address
	1.2)构造方法:Person(3个参数){}
	1.3)方法:sayHi()---输出name+age+address的值
  2)创建Student类，继承Person，包含:
    2.1)成员变量:stuId
	2.2)构造方法:Student(4个参数){}
  3)创建Teacher类，继承Person，包含:
    2.1)成员变量:salary
	2.2)构造方法:Teacher(4个参数){}
  4)创建Doctor类，继承Person，包含:
    2.1)成员变量:level
	2.2)构造方法:Doctor(4个参数){}
  5)创建Test类，在main()中:
    5.1)创建Student数组，Teacher数组，Doctor数组，并填充数据
	    遍历三个数组，分别跟大家问好





























SuperDemo
















FlyingObject:飞行物














继承要符合is a(是一个)的关系


















class Aoo{
  int a;
}
class Boo extends Aoo{
  int b;
}
class Coo extends Boo{
  int c;
}

Coo o = new Coo();
o.c = 1;
o.b = 2;
o.a = 3;













class Person{----------------------------超类/父类
  String name;
  int age;
  String address;
  void eat(){}
  void sleep(){}
}
class Student extends Person{------------派生类/子类
  String stuId;
  void study(){}
}
class Teacher extends Person{------------派生类/子类
  double salary;
  void teach(){}
}
class Doctor extends Person{-------------派生类/子类
  String level;
  void cut(){}
}






Teacher tea = new Teacher();
tea.salary/teach();
tea.name/age/address/eat()/sleep();

Student stu = new Student();
stu.stuId/study();
stu.name/age/address/eat()/sleep();














程序中的继承:
    代码不用自己写，自己也能用

生活中的继承:
1)继承财产:
    钱不用自己挣，自己也能花
2)继承皇位:
    江山不用自己打，自己也能坐
3)继承工作:
    工作不用自己找，自己也能干



















3:为as的长度
4:为as中每个元素的长度

int[][] as = new int[3][4]; //3行4列
for(int i=0;i<as.length;i++){ //行
  for(int j=0;j<as[i].length;j++){ //列
    as[i][j] = 100;
  }
}







i=0
  j=0 00
  j=1 01
  j=2 02
  j=3 03
i=1
  j=0 10
  j=1 11
  j=2 12
  j=3 13
i=1
  j=0 20
  j=1 21
  j=2 22
  j=3 23















//声明int[]型数组as，包含3个元素
//每个元素都是int[]型，默认值为null
int[][] as = new int[3][];
as[0] = new int[2];
as[1] = new int[3];
as[2] = new int[2];
//给as中第2个元素中的第1个元素赋值为100
as[1][0] = 100;






as----------------int[][]
as[0]-------------int[]
as[0][0]----------int











//声明double[]型数组ds，包含10个元素
//每个元素都是double[]型，默认值为null
double[][] ds = new double[10][];
















int[] arr = new int[]{
  2,
  5,
  8
};

Student[] stus = new Student[]{
  new Student("zhangsan",25,"LF"),
  new Student("lisi",26,"JMS"),
  new Student("wangwu",27,"SD")
};

















//声明Student数组stus，包含3个元素
//每个元素都是Student类型，默认值为null
Student[] stus = new Student[3];













int[] arr = new int[3];
arr[0] = 5;

Student[] stus = new Student[3]; //创建Student数组对象
stus[0] = new Student(); //创建Student对象














Airplane[] as = new Airplane[10];



















//声明整型数组arr，包含3个元素
//每个元素都是int类型，默认值为0
int[] arr = new int[3];



//声明Airplane数组as，包含10个元素
//每个元素都是Airplane类型，默认值为null
Airplane[] as = new Airplane[10];




Bee[] bs = new Bee[20];

















int[] arr = new int[3];


堆:new出来的对象(包括成员变量)
栈:局部变量


变量里面装值
引用里面装地址


局部变量若是基本类型，存值
            引用类型，存地址














