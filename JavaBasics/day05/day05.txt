回顾:
1.分支结构:
  3)if...else if:多
  4)switch...case:多
    优点:效率高、结构清晰
	缺点:整数(1.7开始支持String)、相等
	break:跳出switch
2.循环:反复多次执行一段相同或相似的代码
3.循环三要素:
  1)循环变量的初始化
  2)循环的条件(以循环变量为基础)
  3)循环变量的改变(向着循环的结束变)
  循环变量:在循环过程中所反复改变的那个数
4.循环结构:
  1)while:先判断后执行，有可能一次都不执行
  2)do...while:先执行后判断，至少执行一次
               要素1与要素3相同时，首选do...while




笔记:
1.循环结构:
  3)for:应用率高
2.break:跳出循环
  continue:跳过循环体中剩余语句而进入下一次循环
3.三种循环结构的更佳适用情况:
  1)while:不固定次数
          要素1与要素3不同时，首选while
  2)do...while:不固定次数
               要素1与要素3相同时，首选do...while
  3)for:应用率最高，固定次数循环
4.嵌套循环:
  1)循环中套循环，一般多行多列时使用，外层控制行，内层控制列
  2)执行过程:外层走一次，内层走所有次
  3)建议:循环层数越少越好，能用一层就不用两层，能用两层就不用三层
         若业务必须通过三层以上的循环来解决，说明你的设计有问题
  4)break只能跳出一层循环
5.程序=算法+数据结构
  1)算法:解决问题的流程/步骤(顺序、分支、循环)
  2)数据结构:将数据按照某种特定的结构来保存
             数怎么存
	设计良好的/合理的数据结构会导致好的算法
6.数组:
  1)是一种数据类型(引用类型)
  2)相同数据类型元素的集合
  3)数组的定义:
      int[] arr = new int[10];
  4)数组的初始化:
      int[] arr = new int[3]; //0,0,0
	  int[] arr = {1,4,7}; //1,4,7
	  int[] arr = new int[]{1,4,7}; //1,4,7
	  int[] arr;
      arr = {1,4,7}; //编译错误，此方式只能声明同时初始化
	  arr = new int[]{1,4,7}; //正确
  5)数组的访问:
    5.1)通过数组名.length来获取数组的长度(元素的个数)
	      int[] arr = new int[10];
		  System.out.println(arr.length); //10
	5.2)通过下标/索引来访问元素
	    下标从0开始，最大到(数组的长度-1)
		  int[] arr = new int[3];
		  arr[0] = 10;
		  arr[1] = 20;
		  arr[2] = 30;
		  arr[3] = 40; //数组下标越界异常
		  System.out.println(arr[arr.length-1]);
  6)数组的遍历:
      int[] arr = new int[10];
	  for(int i=0;i<arr.length;i++){
	    arr[i] = 100;
	  }
	  for(int i=0;i<arr.length;i++){
	    System.out.println(arr[i]);
	  }
	  for(int i=arr.length-1;i>=0;i--){
	    System.out.println(arr[i]);
	  }


练习:----------------------每人两遍
1)完成随机加法运算器
2)完成九九乘法表
3)完成求数组元素的最大值--------day06包中

完成课后作业

当日事当日毕












int[] arr = {23,45,78,4};

找最大值的算法:
1)假设第1个元素为最大值:
    int max = arr[0];
2)遍历剩余元素，将剩余元素与max比较，
  若剩余元素大于max，则修改max为较大的
    for(int i=1;i<arr.length;i++){
	  if(arr[i]>max){
	    max=arr[i];
	  }
	}

max=23/45/78














ArrayDemo




0-------------char的默认值
'0'














      

int[] arr = new int[10];
for(int i=0;i<arr.length;i++){
  arr[i] = 100;
}

for(int i=0;i<arr.length;i++){
  System.out.println(arr[i]);
}

for(int i=arr.length-1;i>=0;i--){
  System.out.println(arr[i]);
}


System.out.println(arr[0]);
System.out.println(arr[1]);
System.out.println(arr[2]);
System.out.println(arr[3]);
System.out.println(arr[4]);
System.out.println(arr[5]);
System.out.println(arr[6]);
System.out.println(arr[7]);
System.out.println(arr[8]);
System.out.println(arr[9]);











arr[0] = 100;
arr[1] = 100;
arr[2] = 100;
arr[3] = 100;
arr[4] = 100;
arr[5] = 100;
arr[6] = 100;
arr[7] = 100;
arr[8] = 100;
arr[9] = 100;
















int[] arr = new int[3]; //0,0,0
arr[0] = 100;
arr[1] = 200;
arr[2] = 300;
arr[3] = 400; //数组下标越界异常
System.out.println(arr[arr.length-1]);

















arr[0]-------代表arr中的第1个元素
arr[1]-------代表arr中的第2个元素
arr[2]-------代表arr中的第3个元素













int a=0;
int b=0;
int c=0;
a=100;
b=100;












//声明整型数组arr，包含3个元素
//每个元素都是int类型，默认值为0
int[] arr = new int[3];



//声明浮点型数组d，包含10个元素
//每个元素都是double型，默认值为0.0
double[] d = new double[10];



//声明布尔型数组b，包含26个元素
//每个元素都是boolean型，默认值为false
boolean[] b = new boolean[26];
























int   a; //声明整型变量a
int[] a; //声明整型数组变量a
















将1万本书按出版社分类存储-------------设计数据结构
找Java编程思想------------------------算法不简单

将1万本书按照图片类别分类存储---------设计数据结构
找Java编程思想------------------------算法简单















想一下子跳出多层循环，只是你自己想当然的想法




for(int i=1;i<=100;i++){
  for(int j=1;j<=200;j++){
    for(int k=1;k<=300;k++){
	  if(?){
	    break; //跳出k层循环
	  }
      System.out.println("aaa");
	}
  }
}
---------------6000000









i=1
  j=1
    k走30次
  j=2
    k走30次
  ...
  j=20
    k走30次








  20
i=2
  j=1到20
...
i=10
  j=1到20














\t:水平制表位，固定占8位




1*4=4	2*4=8   3*4=12	4*4=16
1*5=5	2*5=10  3*5=15	4*5=20	5*5=25	



1*4=4 2*4=8 3*4=12 4*4=16 
1*5=5 2*5=10 3*5=15 4*5=20 5*5=25 























Math.random()-------------0.0到0.999999999999999...
*100----------------------0.0到99.99999999999999...
(int)---------------------0到99



int score = 0; //得分
for(int i=1;i<=10;i++){ //10次
  //1.出题  2.答题  3.判题
}
System.out.println("总分为:"+score);

0到99

(1)25+5=?
算吧!
30
答对了

Addition







(2)47+8=?
算吧!
45
答错了
(3)25+5=?
算吧!
30
答对了
(4)47+8=?
算吧!
45
答错了
(5)25+5=?
算吧!
30
答对了
(6)47+8=?
算吧!
45
答错了
(7)25+5=?
算吧!
30
答对了
(8)47+8=?
算吧!
45
答错了
(9)25+5=?
算吧!
30
答对了
(10)47+8=?
算吧!
45
答错了
总分为:50



















//    1             2           3
for(int times=0 ; times<10 ; times++){
  System.out.println("行动是成功的阶梯"); //4.
}
System.out.println("over");

12432432432432432432432
12432432432432432432432

int times=0; //1.
while(times<10){ //2.
  System.out.println("行动是成功的阶梯"); //4.
  times++; //3.
}
System.out.println("over");





ForDemo











if(month==1 || month==3 || month==5 || month==7 ...){
  days = 31;
}else if(month==4 || month==6 ...){
  days = 30;
}else{
  if(){
  }else{
  }
}













1/3/5/7/8/10/12----------------31天
3/6/9/11-----------------------30天
2------------------------------28天/29天
















税后



五险:10%--------------1000
一金:12%--------------1200+公司1200
税--------------------325















